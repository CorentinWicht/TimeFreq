%Test FclustGND function
%AUTHOR: Eric Fields
%VERSION DATE: 14 July 2017

global test_xls_output;
if isempty(test_xls_output)
    test_xls_output = true;
end

%Load a GND for testing
%Load a GND for testing
FMUT_dir = fileparts(fileparts(mfilename('fullpath')));
load(fullfile(FMUT_dir, 'testing', 'data', 'EmProb_13subs_Test.GND'), '-mat');

%Define general variables
time_wind = [500, 800];
n_perm = 100;

%% Exact interaction

if test_xls_output
    output_file = fullfile('outputs', 'Fclust_test.xlsx');
else
    output_file = false;
end
GND = FclustGND(GND, ...
              'bins',          [24, 26, 27, 29], ...
              'factor_names',  {'Probability', 'Emotion'}, ... 
              'factor_levels', [2, 2], ... 
              'time_wind',     time_wind, ... 
              'n_perm',        n_perm, ...
              'alpha',         0.05, ...
              'exclude_chans', {'centroparietal_cluster'}, ...
              'save_GND',      'no', ...
              'chan_hood',     75, ...
              'thresh_p',      .05, ...
              'plot_raster',   'yes', ...
              'output_file',   output_file);

%F==t^2
[~, start_sample] = min(abs( GND.time_pts - time_wind(1) ));
[~, end_sample  ] = min(abs( GND.time_pts - time_wind(2) ));
assert(all(all(GND.F_tests(end).F_obs.ProbabilityXEmotion - GND.grands_t(1:32, start_sample:end_sample, 51).^2 < 1e-4)));


%% One-way ANOVA

if test_xls_output
    output_file = fullfile('outputs', 'Fclust_test_oneway.xlsx');
else
    output_file = false;
end
GND = FclustGND(GND, ...
              'bins',          [24, 26, 27], ...
              'factor_names',  {'NEU_Probability'}, ... 
              'factor_levels', 3, ... 
              'time_wind',     time_wind, ... 
              'n_perm',        n_perm, ...
              'alpha',         0.05, ...
              'exclude_chans', {'centroparietal_cluster'}, ...
              'save_GND',      'no', ...
              'chan_hood',     75, ...
              'thresh_p',      .05, ...
              'plot_raster',   'yes', ...
              'output_file',   output_file);
          

%% Three-way approximate interaction 

GND = FclustGND(GND, ...
              'bins',          [1:22, 24:28], ...
              'factor_names',  {'Probabiltiy', 'Category', 'Study'}, ... 
              'factor_levels', [3, 3, 3], ... 
              'time_wind',     time_wind, ... 
              'n_perm',        n_perm, ...
              'alpha',         0.05, ...
              'exclude_chans', {'centroparietal_cluster'}, ...
              'save_GND',      'no', ...
              'chan_hood',     75, ...
              'thresh_p',      .05, ...
              'plot_raster',   'no');


%% Mean window

if test_xls_output
    output_file = fullfile('outputs', 'FclustGND_meanwind_test.xlsx');
else
    output_file = false;
end
GND = FclustGND(GND, ...
              'bins',          [24, 26, 27, 29], ...
              'factor_names',  {'Probability', 'Emotion'}, ... 
              'factor_levels', [2, 2], ... 
              'time_wind',     time_wind, ...
              'mean_wind',     'yes', ...
              'n_perm',        n_perm, ...
              'alpha',         0.05, ...
              'exclude_chans', {'centroparietal_cluster'}, ...
              'save_GND',      'no', ...
              'chan_hood',     75, ...
              'thresh_p',      .05, ...
              'plot_raster',   'yes', ...
              'output_file',   output_file);

%Calculate t-test on same data
GND = clustGND(GND, 51, ...
               'chan_hood',    75, ...
               'n_perm',       n_perm, ...
               'time_wind',    time_wind, ...
               'mean_wind',    'yes', ...
               'exclude_chans', {'centroparietal_cluster'}, ...
               'plot_raster',  'no', ...
               'plot_gui',     'no', ...
               'plot_mn_topo', 'no', ...
               'save_GND',     'no', ...
               'verblevel',    2);
 
%F==t^2
assert(all(GND.F_tests(end).F_obs.ProbabilityXEmotion - GND.t_tests(end).data_t.^2 < 1e-9))
          
